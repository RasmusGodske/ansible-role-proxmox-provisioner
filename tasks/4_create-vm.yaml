---
- name: Create VM
  delegate_to: localhost
  community.general.proxmox_kvm:
    state: present
    node: "{{ vm_node }}"
    api_host: "{{ proxmox.hosts.nuc8.host }}"
    api_user: "{{ vm_node_api_user }}"
    api_password: "{{ vm_node_api_password }}"
    #  VM Configuration
    vmid: "{{ vm_id }}"
    name: "{{ vm_name }}"
    agent: true
    # Start VM on boot
    onboot: true
    boot: c # boot from disk
    bootdisk: scsi0 # boot from disk
    # Processor Configuration
    cores: "{{ vm_cores }}"
    sockets: "{{ vm_sockets }}"
    # Ram Memory Configuration
    memory: "{{ vm_memory }}"
    # Serial Console - Required to use WebUI console in proxmox
    serial:
      serial0: socket
      vga: serial0
    # SCSI Controller
    scsihw: virtio-scsi-pci
    # Network Devices
    net: "{{ vm_network_devices }}"
      # net0: 'virtio=4A:76:7A:DC:F5:89,bridge=vmbr0' # Normal Bridge
      # net0: 'virtio=4A:76:7A:DC:F5:89,bridge=vmbr0,firewall=1' # Bridge with Firewall
      # net0: 'virtio=4A:76:7A:DC:F5:89,bridge=vmbr0,firewall=1,tag=10' # Bridge with Firewall and VLAN 10

    # Cloud Init Drive
    ide:
      ide2: "local-lvm:cloudinit,media=cdrom"

    ### Cloud Init Configuration
    cicustom: "user=local:snippets/user-ci-snippet.yaml,vendor=local:snippets/vendor-ci-snippet.yaml"

    ipconfig: "{{ cloudinit_ipconfig }}"

    # To verify the nameservers, run the following command inside the vm:
    # `cat /run/systemd/resolve/resolv.conf`
    # or
    # `resolvectl status`
    nameservers: "{{ nameservers }}"
  register: create_vm_result


- name: Set Facts
  set_fact:
    vm:
      first_time_creation: "{{ create_vm_result.changed }}"

- name: Wait for vm to be created
  ansible.builtin.pause:
    seconds: 10
  when: vm.first_time_creation == true

# CPU arguments can be useful in some cases eg. running mongoDb which requries avx
- name: Setting cpu arguments in /etc/pve/nodes/{{ vm_node }}/qemu-server/{{ vm_id }}.conf
  delegate_to: "{{ vm_node_ip }}"
  ansible.builtin.blockinfile:
    path: "/etc/pve/nodes/{{ vm_node }}/qemu-server/{{ vm_id }}.conf"
    block: "cpu: {{ cpu_args }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - Setting cpu arguments"
  when: cpu_args is defined
